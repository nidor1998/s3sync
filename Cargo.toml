[package]
name = "s3sync"
version = "1.46.0"
edition = "2024"
authors = ["nidor1998 <nidor1998@gmail.com>"]
description = "Reliable, flexible, and fast synchronization tool for S3."
license = "Apache-2.0"
rust-version = "1.86.0"
repository = "https://github.com/nidor1998/s3sync"
homepage = "https://github.com/nidor1998/s3sync"
documentation = "https://docs.rs/s3sync"
readme = "README.md"
keywords = ["AWS", "Amazon", "S3", "sync"]
categories = ["command-line-utilities", "filesystem", "asynchronous", "concurrency"]

[dependencies]
anyhow = { version = "1.0.99" }
async-trait = "0.1.89"
async-channel = "2.5.0"
aws-config = { version = "1.8.6", features = ["behavior-version-latest"] }
aws-runtime = "1.5.10"
aws-sdk-s3 = "1.106.0"
aws-smithy-runtime-api = "1.9.0"
aws-smithy-types = {  version = "1.3.2"}
aws-smithy-types-convert = { version = "0.60.9", features = ["convert-chrono"] }
aws-types = "1.3.8"
bitflags = "2.9.4"
base64 = "0.22.1"
byte-unit = "5.1.6"
cfg-if = "1.0.3"
clap = { version = "4.5.47", features = ["derive", "env", "cargo", "string"] }
clap_complete = "4.5.57"
clap-verbosity-flag = "3.0.4"
chrono = "0.4.42"
crc32c = "0.6.8"
crc32fast = "1.5.0"
crc64fast-nvme = "1.2.0"
dyn-clone = "1.0.20"
fancy-regex = "0.16.1"
filetime = "0.2.26"
futures = "0.3.31"
futures-util = "0.3.31"
leaky-bucket = "1.1.2"
md5 = "0.8.0"
mime_guess = "2.0.5"
hex = "0.4.3"
http-body-util = "0.1.3"
hyper = "1.7.0"
indicatif = "0.18.0"
log = "0.4.28"
pin-project = "1.1.10"
percent-encoding = "2.3.2"
regex = "1.11.2"
rusty-fork = "0.3.0"
sha1 = "0.10.6"
sha2 = "0.10.9"
shadow-rs = { version = "1.3.0", optional = true }
simple_moving_average = "1.0.2"
tempfile = "3.22.0"
thiserror = "2.0.16"
tokio = { version = "1.47.1", features = ["full"] }
tokio-util = "0.7.16"
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.20", features = ["env-filter", "json", "local-time"] }
url = "2.5.7"
urlencoding = "2.1.3"
walkdir = "2.5.0"
zeroize = "1.8.1"
zeroize_derive = "1.4.2"

## The following dependencies are only required for lua support.
## If you want to luagit, you can specify the `luajit` feature.
## If you have trouble with third-party Lua libraries, remove `vendored` feature(static linking). This will use the system Lua engine.
## But you need to install Lua engine according to your OS.
## mlua = { version = "0.11.3", features = ["luajit", "async", "send", "vendored"], optional = true }
mlua = { version = "0.11.3", features = ["lua54", "async", "send", "vendored"], optional = true }

[dev-dependencies]
nix = { version = "0.30.1", features = ["user", "process", "signal"] }
once_cell = "1.21.3"
uuid = { version = "1.18.1", features = ["v4"] }

[build-dependencies]
shadow-rs = { version = "1.3.0", optional = true }

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(coverage_nightly)'] }

[features]
default = ["version", "lua_support"]
e2e_test = []
e2e_test_dangerous_simulations = []

# Add detailed build information to the CLI version output
version = ["dep:shadow-rs"]

lua_support = ["dep:mlua"]

[profile.release]
debug = 1
panic = "unwind"  # For tempfile::NamedTempFile
opt-level = 3
strip = "symbols"
lto = "fat"
codegen-units = 1

[profile.release-min-size]
inherits = "release"
debug = 0
panic = "abort"
opt-level = "z"